package com.te.spring_boot.service;

import java.util.List;
import java.util.Objects;
import java.util.Optional;

import org.springframework.stereotype.Service;

import com.te.spring_boot.entity.Student;
import com.te.spring_boot.repository.StudentRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class StudentService {
	private final StudentRepository studentRepository;

	public List<Student> getStudents() {
		return studentRepository.findAll();
	}

	public void addNewStudent(Student student) {
		Optional<Student> studentOptional = studentRepository.findStudentByEmail(student.getEmail());
		if (studentOptional.isPresent()) {

			throw new IllegalStateException("email taken");

		} else {
			studentRepository.save(student);
		}

	}

	public void deleteStudent(Long studentId) {
		boolean exists = studentRepository.existsById(studentId);
		if (!exists) {
			throw new IllegalStateException("student with id "+studentId+" does not exists");
		}else {
			studentRepository.deleteById(studentId);
		}
		

	}

	public void updateStudent(Long studentId, String name, String email) {
		Student student= studentRepository.findById(studentId).orElseThrow(()-> new IllegalStateException(
				"Student with id "+studentId+"does not exist"));
		
		if (name!=null && name.length()>0 && !Objects.equals(student.getName(), name)) {
			student.setName(name);
			
		}
		
		if (email!=null && email.length()>0 && !Objects.equals(student.getEmail(), email)) {
			student.setName(name);
			
		}
		
	}

}
